***************
*** 47,53 ****
  
      @Test
      public void setProject() {
-         config = loadYamlResource(embulk, "base.yml");
          config.set("json_keyfile", Resources.getResource(BASIC_RESOURCE_PATH+"json_key.json").getPath());
          PluginTask task = config.loadConfig(PluginTask.class);
          BigqueryTaskBuilder.setProject(task);
--- 80,101 ----
  
      @Test
      public void setProject() {
+         config = embulk.configLoader().fromYamlString(
+                 String.join("\n",
+                         "type: bigquery_java",
+                         "mode: replace",
+                         "auth_method: service_account",
+                         "json_keyfile: json_key.json",
+                         "dataset: dataset",
+                         "table: table",
+                         "source_format: NEWLINE_DELIMITED_JSON",
+                         "compression: GZIP",
+                         "auto_create_dataset: false",
+                         "auto_create_table: true",
+                         "path_prefix: /tmp/bq_compress/bq_",
+                         ""
+                 )
+         );
          config.set("json_keyfile", Resources.getResource(BASIC_RESOURCE_PATH+"json_key.json").getPath());
          PluginTask task = config.loadConfig(PluginTask.class);
          BigqueryTaskBuilder.setProject(task);
***************
*** 57,64 ****
  
      @Test(expected = ConfigException.class)
      public void setProject_config_exception() {
-         config = loadYamlResource(embulk, "base.yml");
          PluginTask task = config.loadConfig(PluginTask.class);
          BigqueryTaskBuilder.setProject(task);
      }
  }
--- 105,158 ----
  
      @Test(expected = ConfigException.class)
      public void setProject_config_exception() {
+         config = embulk.configLoader().fromYamlString(
+                 String.join("\n",
+                         "type: bigquery_java",
+                         "mode: replace",
+                         "auth_method: service_account",
+                         "json_keyfile: json_key.json",
+                         "dataset: dataset",
+                         "table: table",
+                         "source_format: NEWLINE_DELIMITED_JSON",
+                         "compression: GZIP",
+                         "auto_create_dataset: false",
+                         "auto_create_table: true",
+                         "path_prefix: /tmp/bq_compress/bq_",
+                         ""
+                 )
+         );
          PluginTask task = config.loadConfig(PluginTask.class);
          BigqueryTaskBuilder.setProject(task);
      }
+ 
+ 
+     @Test
+     public void clustering() {
+         config = embulk.configLoader().fromYamlString(
+                 String.join("\n",
+                         "type: bigquery_java",
+                         "mode: replace",
+                         "auth_method: service_account",
+                         "json_keyfile: json_key.json",
+                         "dataset: dataset",
+                         "table: table",
+                         "source_format: NEWLINE_DELIMITED_JSON",
+                         "compression: GZIP",
+                         "auto_create_dataset: false",
+                         "auto_create_table: true",
+                         "path_prefix: /tmp/bq_compress/bq_",
+                         "clustering:",
+                         "  fields:",
+                         "    - foo",
+                         "    - bar",
+                         "    - baz"
+                         )
+         );
+         PluginTask task = config.loadConfig(PluginTask.class);
+         BigqueryTaskBuilder.setAbortOnError(task);
+         System.out.println(task.getClustering().get().getFields());
+         List<String> expectedOutput = Arrays.asList("foo", "bar", "baz");
+ 
+         assertEquals(expectedOutput, task.getClustering().get().getFields().get());
+     }
  }
